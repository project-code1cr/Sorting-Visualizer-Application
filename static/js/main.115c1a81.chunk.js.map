{"version":3,"sources":["sortingAlgorithms/bubbleSort.js","sortingAlgorithms/insertionSort.js","sortingAlgorithms/selectionSort.js","sortingAlgorithms/quickSort.js","sortingAlgorithms/mergeSort.js","components/Sortervisuals/Sortervisuals.js","components/Headervisuals/Headervisuals.js","App.js","reportWebVitals.js","index.js"],"names":["swap","arr","i","j","temp","quickSort","plan","sorted","pos","isPartition","console","log","quickSortRec","start","end","length","pivot","Math","floor","key","push","left","right","partition","mergeSort","mergeSortRec","beg","mid","value","index","merge","step","concat","Sortervisuals","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","array","NOELEM","speed","valueNow","running","paused","genArray","idx","random","setState","_this2","arraybarlist","document","getElementsByClassName","_loop","move","setTimeout","pos1","pos2","style","backgroundColor","_this3","animationSteps","_loop2","stepWrap","wrapFunction","_this4","display","bubbleSortPlan","moves","bs","filter","animate","mergeSortPlan","ms","quickSortPlan","qs","insertionSortPlan","is","selectionSortPlan","minidx","ss","val","Array","from","forEach","box","fontSize","_this5","react_default","a","createElement","className","onClick","bubbleSort","insertionSort","selectionSort","cjs_default","onChange","changeNum","thumbClassName","trackClassName","defaultValue","min","max","renderThumb","map","paddingBottom","paddingLeft","window","innerWidth","paddingRight","React","Component","App","components_Sortervisuals_Sortervisuals","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.115c1a81.chunk.js","sourcesContent":["export function bubbleSort(arr){\n    var sorted = false;\n    var moves = {\n        sorted:[],\n        pos:[],\n        swap:[]\n    };\n    console.log(arr);\n    for(let i = 0; i < arr.length - 1; i++){\n        for(let j = 0; j< arr.length - i - 1; j++){\n            if(arr[j] > arr[j+1]){\n                moves.pos.push([j,j+1]);\n                moves.swap.push(true);\n                //moves.push([true,j,j+1]);\n                swap(arr,j,j+1);\n                //moves.push([false,j,j+1]);\n\n                moves.pos.push([j,j+1]);\n                moves.swap.push(false);\n            }else{\n                moves.pos.push([j,j+1]);\n                moves.swap.push(false);\n                //moves.push([false,j,j+1]);\n            }\n        }\n    }\n    console.log(moves);\n    moves.sorted = arr;\n    return moves;\n}\n\nfunction swap(arr,i, j){\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n}","export function insertionSort(arr){\n    var moves = {\n        sorted:[],\n        pos:[],\n        swap:[]\n    };\n    console.log(arr);\n    for(let i = 1; i < arr.length; i++){\n        var j = i-1;\n        var key = i;\n        while(j>=0 && arr[key] < arr[j]){\n            console.log('in');\n            console.log(1);\n            console.log([key,j]);\n            moves.pos.push([key,j]);\n            moves.swap.push(true);\n            swap(arr,key,j);\n\n            moves.pos.push([key,j]);\n            moves.swap.push(false);\n\n            key = j;\n            j = j-1;\n        }\n        console.log('OUT');\n        console.log(1);\n        console.log([key,j]);\n        moves.pos.push([key,j]);\n        moves.swap.push(false);\n    }\n    moves.sorted = arr;\n    return moves;\n}\n\nfunction swap(arr,i, j){\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n}","\nexport function selectionSort(arr){\n    var plan = {\n        sorted:[],\n        pos:[],\n        swap:[]\n    };\n    let minidx = 0;\n    for(let i = 0; i< arr.length - 1; i++){\n        minidx = i;\n        for(let j = i+1; j< arr.length; j++){\n            if(arr[j]<arr[minidx]){\n                minidx = j;\n            }\n            plan.pos.push([minidx,j]);\n            plan.swap.push(false);\n        }\n        swap(arr,minidx,i);\n\n        plan.pos.push([minidx,i]);\n        plan.swap.push(true);\n\n        plan.pos.push([minidx,i]);\n        plan.swap.push(false);\n    }\n    plan.sorted=arr;\n    console.log(arr);\n    return plan;\n}\n\nfunction swap(arr,i, j){\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n}","export function quickSort(arr){\n    var plan = {\n        sorted:[],\n        pos:[],\n        swap:[],\n        isPartition:[]\n    };\n    console.log(\":p\")\n    console.log(plan);\n    \n    quickSortRec(arr,0,arr.length-1,plan);\n    console.log(arr);\n    plan.sorted = arr;\n    console.log(plan);\n    return plan;\n}\n\nfunction quickSortRec(arr,start, end,plan){\n    console.log(\":)\");\n    console.log(plan);\n    if(start === end || end < start || start < 0 || end >= arr.length){\n     return;\n    }\n    var pivot = partition(arr,start,end,plan);\n    \n    quickSortRec(arr,start,pivot-1,plan);\n    \n    quickSortRec(arr,pivot+1,end,plan);\n\n}\n\nfunction partition(arr,start,end,plan)\n{\n    var pivot = Math.floor((end + start)/2);\n    var key = arr[pivot];\n\n    plan.pos.push([pivot,pivot]);\n    plan.swap.push(true);\n    plan.isPartition.push(true);\n    // console.log('-------------------------');\n    // console.log(`Begining ${start}} and end ${end}`)\n    // console.log(`pivot ${pivot} and key ${key}`);\n    // console.log(arr);\n    // console.log(`swappingn ${arr[pivot]} at position ${pivot} with ${arr[end]} at position ${end}`);\n    console.log(plan);\n    plan.pos.push([pivot,end]);\n    plan.swap.push(true);\n    plan.isPartition.push(false);\n    swap(arr,pivot,end);\n    // console.log(arr);\n\n    var left = start;\n    var right = end -1;\n    plan.pos.push([left,right]);\n    plan.swap.push(false);\n    while(left< right){\n        while(left < end && arr[left]<=key){\n            left +=1;\n            plan.pos.push([left,right]);\n            plan.swap.push(false);\n            plan.isPartition.push(false);\n        }\n        while(right >= start && arr[right] >key){\n            right -=1;\n            plan.pos.push([left,right]);\n            plan.swap.push(false);\n            plan.isPartition.push(false);\n        }\n        if(left< right){\n            // console.log(`swappingn ${arr[left]} at position ${left} with ${arr[right]} at position ${right}`);\n            swap(arr,left,right);\n            plan.pos.push([left,right]);\n            plan.swap.push(true);\n            console.log(arr);\n        }\n    }\n    if(arr[left]>key){\n        // console.log(`swappingn ${arr[left]} at position ${left} with ${key} at position ${end}`);\n        swap(arr,left,end);\n        plan.pos.push([left,end]);\n        plan.swap.push(true);\n        plan.isPartition.push(false);\n        //console.log(arr);\n    }\n    pivot = left;\n    // console.log(`pivot pos ${pivot}`)\n    // console.log('-------------------------');\n    return pivot;\n}\n \nfunction swap(arr,i, j){\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n}","export function mergeSort(arr){\n    var plan = {\n        sorted:[],\n        pos:[],\n        swap:[]\n    };\n    mergeSortRec(arr, 0, arr.length-1,plan);\n    console.log('sorted->');\n    plan.sorted = arr;\n    for(var step =0; step < plan.pos.length;step++){\n        console.log(`Step ${step} \\n pos ${plan.pos[step]} \\n Swap: ${plan.swap[step]}`);\n    }\n    return plan;\n}\n\nfunction merge(arr,beg,mid,end,plan){\n    var start =  mid +1;\n\n    plan.pos.push([beg,start]);\n    plan.swap.push(false);\n    if (arr[mid] <= arr[start]) {\n        return;\n    }\n    while (beg <= mid && start <= end) {\n \n        if (arr[beg] <= arr[start]) {\n            beg++;\n            plan.pos.push([beg,start]);\n            plan.swap.push(false);\n        }\n        else {\n            var value = arr[start];\n            var index = start;\n        \n            while (index !== beg) {\n\n                plan.pos.push([index,index -1]);\n                plan.swap.push(true);\n\n                arr[index] = arr[index - 1];\n                index--;\n            }\n            arr[beg] = value;\n            beg++;\n            mid++;\n            start++;\n        }\n    }\n\n}\n\nfunction mergeSortRec(arr, beg, end, plan){\n    if (beg < end)\n        {\n            let mid = Math.floor((beg + end) / 2);\n            mergeSortRec(arr, beg, mid, plan);\n\n\n            mergeSortRec(arr, mid+1,end, plan);\n\n\n            merge(arr, beg, mid, end, plan);\n\n\n        }\n}","/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport ReactSlider from \"react-slider\";\nimport \"./Sortervisuals.css\";\nimport * as bs from \"../../sortingAlgorithms/bubbleSort.js\";\nimport * as is from \"../../sortingAlgorithms/insertionSort.js\";\nimport * as ss from \"../../sortingAlgorithms/selectionSort.js\";\nimport * as qs from \"../../sortingAlgorithms/quickSort.js\";\nimport * as ms from \"../../sortingAlgorithms/mergeSort.js\";\n\nclass Sortervisuals extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: [],\n      NOELEM: 20,\n      speed: 201 - 20,\n      valueNow: 10,\n      running: false,\n      paused: false,\n    };\n  }\n\n  componentDidMount() {\n    this.genArray();\n  }\n\n  genArray() {\n    var array = [];\n\n    const MAX_VALUE = 100;\n    const MIN_VALUE = 5;\n    const NOELEM = this.state.NOELEM;\n    for (let idx = 0; idx < NOELEM; idx++) {\n      array.push(\n        Math.floor(Math.random() * (MAX_VALUE - MIN_VALUE) + 1) + MIN_VALUE\n      );\n    }\n    // console.log(\"to sort\");\n    // console.log(array);\n    this.setState({ array });\n  }\n  animate(plan) {\n    var speed = this.state.speed;\n    var array = this.state.array;\n    console.log(plan);\n    const arraybarlist = document.getElementsByClassName(\"value-bar\");\n    for (let move = 0; move < plan.pos.length; move++) {\n      // eslint-disable-next-line no-loop-func\n      setTimeout(() => {\n        var pos1 = plan.pos[move][0];\n        var pos2 = plan.pos[move][1];\n        if (plan.swap[move]) {\n          //a swap or not\n          var temp = array[pos1];\n          array[pos1] = array[pos2];\n          array[pos2] = temp;\n          if (move != 0) {\n            arraybarlist[plan.pos[move - 1][0]].style.backgroundColor = \"blue\";\n            if (plan.pos[move - 1][1] >= 0) {\n              arraybarlist[plan.pos[move - 1][1]].style.backgroundColor =\n                \"blue\";\n            }\n          }\n\n          arraybarlist[pos1].style.backgroundColor = \"red\";\n          arraybarlist[pos2].style.backgroundColor = \"red\";\n          this.setState({ array });\n        } else {\n          var pos1 = plan.pos[move][0];\n          var pos2 = plan.pos[move][1];\n          if (move != 0) {\n            arraybarlist[plan.pos[move - 1][0]].style.backgroundColor = \"blue\";\n            arraybarlist[plan.pos[move - 1][1]].style.backgroundColor = \"blue\";\n          }\n\n          arraybarlist[pos1].style.backgroundColor = \"green\";\n          if (pos2 >= 0) {\n            arraybarlist[pos2].style.backgroundColor = \"green\";\n          }\n\n          this.setState({ array });\n        }\n      }, move * speed);\n    }\n    console.log(\"FINITO\");\n    setTimeout(() => {\n      array = plan.sorted;\n      this.setState({ array });\n      const arraybarlist = document.getElementsByClassName(\"value-bar\");\n      for (let idx = 0; idx < arraybarlist.length; idx++) {\n        arraybarlist[idx].style.backgroundColor = \"green\";\n      }\n      setTimeout(() => {\n        for (let idx = 0; idx < arraybarlist.length; idx++) {\n          arraybarlist[idx].style.backgroundColor = \"blue\";\n        }\n        this.setState({ running: false });\n      }, speed * 3);\n    }, plan.pos.length * speed + 20);\n  }\n\n  QueueAnimate(plan) {\n    var speed = this.state.speed;\n    var array = this.state.array;\n    console.log(plan);\n    var animationSteps = [];\n    const arraybarlist = document.getElementsByClassName(\"value-bar\");\n    for (let move = 0; move < plan.pos.length; move++) {\n      var step = function(plan) {\n        var pos1 = plan.pos[move][0];\n        var pos2 = plan.pos[move][1];\n        if (plan.swap[move]) {\n          //a swap or not\n          var temp = array[pos1];\n          array[pos1] = array[pos2];\n          array[pos2] = temp;\n          if (move != 0) {\n            arraybarlist[plan.pos[move - 1][0]].style.backgroundColor = \"blue\";\n            if (plan.pos[move - 1][1] >= 0) {\n              arraybarlist[plan.pos[move - 1][1]].style.backgroundColor =\n                \"blue\";\n            }\n          }\n\n          arraybarlist[pos1].style.backgroundColor = \"red\";\n          arraybarlist[pos2].style.backgroundColor = \"red\";\n          this.setState({ array });\n        } else {\n          var pos1 = plan.pos[move][0];\n          var pos2 = plan.pos[move][1];\n          if (move != 0) {\n            arraybarlist[plan.pos[move - 1][0]].style.backgroundColor = \"blue\";\n            arraybarlist[plan.pos[move - 1][1]].style.backgroundColor = \"blue\";\n          }\n\n          arraybarlist[pos1].style.backgroundColor = \"green\";\n          if (pos2 >= 0) {\n            arraybarlist[pos2].style.backgroundColor = \"green\";\n          }\n\n          this.setState({ array });\n        }\n      };\n      var stepWrap = this.wrapFunction(step, this, [plan]); //--------------------\n      animationSteps.push(stepWrap);\n    }\n    var step = function(plan) {\n      array = plan.sorted;\n      this.setState({ array });\n      const arraybarlist = document.getElementsByClassName(\"value-bar\");\n      for (let idx = 0; idx < arraybarlist.length; idx++) {\n        arraybarlist[idx].style.backgroundColor = \"green\";\n      }\n      setTimeout(() => {\n        for (let idx = 0; idx < arraybarlist.length; idx++) {\n          arraybarlist[idx].style.backgroundColor = \"blue\";\n        }\n        this.setState({ running: false });\n      }, speed * 3);\n    };\n    var stepWrap = this.wrapFunction(step, this, [plan]); //----------------------------------\n    animationSteps.push(stepWrap);\n    this.display(animationSteps);\n  }\n  /*\n    //https://stackoverflow.com/questions/899102/how-do-i-store-javascript-functions-in-a-queue-for-them-to-be-executed-eventuall\n    wrapFunction(fn, context, params) {\n        return function() {\n            fn.apply(context, params);\n        };\n    }\n    */\n\n  /*\n    display(aniSteps){\n        var count = 1;\n        while(aniSteps.length>0){\n            if(!this.state.paused){\n                (aniSteps.shift())();\n            }\n        }\n    }\n\n\n    QuickSortanimate(plan){\n        var speed = this.state.speed;\n        var array = this.state.array;\n        console.log(plan);\n        const arraybarlist = document.getElementsByClassName('value-bar');\n        for(let move = 0; move <plan.pos.length;move ++){\n            // eslint-disable-next-line no-loop-func\n            setTimeout(()=>{\n                var pos1 = plan.pos[move][0];\n                var pos2 = plan.pos[move][1];\n                if(plan.isPartition){\n                    if(arraybarlist[plan.pos[move][0]].style.backgroundColor == 'yellow'){\n                        arraybarlist[plan.pos[move][0]].style.backgroundColor = 'blue';\n                    }\n                    else{\n                        arraybarlist[plan.pos[move]].style.backgroundColor = 'yellow';\n                    }\n                }\n                else if(plan.swap[move]){//a swap or not\n                    var temp = array[pos1];\n                    array[pos1] = array[pos2];\n                    array[pos2] = temp;\n                    if(move!=0){\n                        arraybarlist[plan.pos[move-1][0]].style.backgroundColor = 'blue';\n                        arraybarlist[plan.pos[move-1][1]].style.backgroundColor = 'blue';\n                    }\n\n                    arraybarlist[pos1].style.backgroundColor = 'red';\n                    arraybarlist[pos2].style.backgroundColor = 'red';\n                    this.setState({array})\n                }else{\n                    var pos1 = plan.pos[move][0];\n                    var pos2 = plan.pos[move][1];\n                    if(move!=0){\n                        arraybarlist[plan.pos[move-1][0]].style.backgroundColor = 'blue';\n                        arraybarlist[plan.pos[move-1][1]].style.backgroundColor = 'blue';\n                    }\n                    \n                    arraybarlist[pos1].style.backgroundColor = 'green';\n                    arraybarlist[pos2].style.backgroundColor = 'green';\n                    \n                    this.setState({array})\n                }\n            },move * speed)\n        }\n        console.log(\"FINITO\")\n        setTimeout(()=>{\n            array = plan.sorted;\n            this.setState({array});\n            const arraybarlist = document.getElementsByClassName('value-bar');\n            for(let idx = 0; idx < arraybarlist.length; idx++){\n                arraybarlist[idx].style.backgroundColor = 'green';\n            }\n            setTimeout(()=>{\n                for(let idx = 0; idx < arraybarlist.length; idx++){\n                    arraybarlist[idx].style.backgroundColor = 'blue';\n                }\n            },speed*3);\n        },(((plan.pos.length) * speed) + 20))\n    }\n    */\n  bubbleSort() {\n    console.log(\"bubblesort\");\n    if (!this.state.running) {\n      this.setState({ running: true });\n      const bubbleSortPlan = bs.bubbleSort(this.state.array.filter(() => true));\n      this.animate(bubbleSortPlan);\n    }\n  }\n\n  mergeSort() {\n    console.log(\"mergesort\");\n    if (!this.state.running) {\n      this.setState({ running: true });\n      const mergeSortPlan = ms.mergeSort(this.state.array.filter(() => true));\n      this.animate(mergeSortPlan);\n    }\n  }\n\n  quickSort() {\n    console.log(\"quicksort\");\n    if (!this.state.running) {\n      this.setState({ running: true });\n      const quickSortPlan = qs.quickSort(this.state.array.filter(() => true));\n      this.animate(quickSortPlan);\n    }\n  }\n\n  insertionSort() {\n    console.log(\"insertionsort\");\n    if (!this.state.running) {\n      this.setState({ running: true });\n      const insertionSortPlan = is.insertionSort(\n        this.state.array.filter(() => true)\n      );\n      this.animate(insertionSortPlan);\n    }\n  }\n\n  selectionSort() {\n    console.log(\"selectionsort\");\n    if (!this.state.running) {\n      this.setState({ running: true });\n      const selectionSortPlan = ss.selectionSort(\n        this.state.array.filter(() => true)\n      );\n      this.animate(selectionSortPlan);\n    }\n  }\n\n  changeNum(val) {\n    var speed = 201 - this.state.NOELEM;\n    if (val < 20) {\n      const arraybarlist = Array.from(\n        document.getElementsByClassName(\"value-bar\")\n      );\n      arraybarlist.forEach((box) => {\n        box.style.fontSize = `${20}px`;\n      });\n    } else {\n      const arraybarlist = Array.from(\n        document.getElementsByClassName(\"value-bar\")\n      );\n      arraybarlist.forEach((box) => {\n        box.style.fontSize = `${0}px`;\n      });\n    }\n\n    this.setState({ NOELEM: val });\n    this.setState({ speed });\n    this.genArray();\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"Header\">\n          <div className=\"button-container\">\n            <button className=\"button\" onClick={() => this.genArray()}>\n              {\" \"}\n              New array{\" \"}\n            </button>\n          </div>\n          <div className=\"vl\"></div>\n          <div className=\"button-container\">\n            <button className=\"button\" onClick={() => this.bubbleSort()}>\n              {\" \"}\n              Bubble Sort{\" \"}\n            </button>\n          </div>\n          <div className=\"button-container\">\n            <button className=\"button\" onClick={() => this.mergeSort()}>\n              {\" \"}\n              Merge Sort\n            </button>\n          </div>\n          <div className=\"button-container\">\n            <button className=\"button\" onClick={() => this.quickSort()}>\n              {\" \"}\n              Quick Sort\n            </button>\n          </div>\n          <div className=\"button-container\">\n            <button className=\"button\" onClick={() => this.insertionSort()}>\n              {\" \"}\n              Insertion Sort{\" \"}\n            </button>\n          </div>\n          <div className=\"button-container\">\n            <button className=\"button\" onClick={() => this.selectionSort()}>\n              {\" \"}\n              Selection Sort\n            </button>\n          </div>\n          <ReactSlider\n            onChange={(val) => {\n              if (!this.state.running) {\n                this.changeNum(val);\n              }\n            }}\n            className=\"horizontal-slider\"\n            thumbClassName=\"example-thumb\"\n            trackClassName=\"example-track\"\n            defaultValue={this.state.NOELEM}\n            min=\"10\"\n            max=\"200\"\n            renderThumb={(props, state) => (\n              <div {...props}>{state.valueNow}</div>\n            )}\n          />\n          {\n            //<div className='button-container'><button className='button' onClick={()=>{this.setState({paused:!this.state.paused})}}>PAUSE</button></div>\n          }\n        </div>\n\n        <div className=\"array-holder\">\n          {/* Maps value in the array to its own div tag*/}\n          {/*------------------- POTENTIAL ERROR SPOT WITH key = IDX -------------------------*/}\n          {this.state.array.map((value, idx) => (\n            <div\n              className=\"value-bar\"\n              key={idx}\n              style={{\n                paddingBottom: `${value * 5}px`,\n                paddingLeft: `${Math.floor(\n                  window.innerWidth / (this.state.array.length * 2) / 2\n                )}px`,\n                paddingRight: `${Math.floor(\n                  window.innerWidth / (this.state.array.length * 2) / 2\n                )}px`,\n              }}\n            >\n              {value}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sortervisuals;\n","import React from 'react';\nimport './Headervisuals.css';\n\nclass Headervisuals extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            sortingAlgo : \"\"\n        }\n    }\n    sortingAlgo(algo){\n\n    }\n    render(){\n        return(<div>\n            <button onClick={()=>this.genArray()}> New array </button>\n            <button onClick={()=>{this.sortingAlgo('bs')}}> Bubble Sort </button>\n            <button onClick={()=>{this.sortingAlgo('ms')}}> Merge Sort</button>\n            <button onClick={()=>{this.sortingAlgo('qs')}}> Quick Sort</button>\n            <button onClick={()=>{this.sortingAlgo('is')}}> Insertion Sort </button>\n            <button onClick={()=>{this.sortingAlgo('ss')}}> Selection Sort</button>\n            <p>{this.state.sortingAlgo}</p>\n        </div>)\n    }\n}\n\nexport default Headervisuals","import Sortervisuals from './components/Sortervisuals/Sortervisuals'\nimport Headervisuals from './components/Headervisuals/Headervisuals'\n\nimport React from 'react'\n\nfunction App() {\n  return (\n    <div>\n      \n      {/* Component  which holds bars and updates positions as they get sorted*/}\n      <Sortervisuals></Sortervisuals>\n    </div>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}